# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  UPDATER_DIR: "src/updater"
  API_DIR: "src/api"

jobs:
  test-updater:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: password
          POSTGRES_DB: unittest
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        cache-dependency-path: |
              src/go.sum

    - name: Run migration
      working-directory: ${{ env.UPDATER_DIR }}
      shell: bash -l {0}
      run: |
        go install github.com/pressly/goose/v3/cmd/goose@latest
        $(go env GOPATH)/bin/goose --dir database/migrations/  postgres "host=localhost user=app password=password dbname=unittest sslmode=disable" up

    - name: Build
      working-directory: ${{ env.UPDATER_DIR }}
      run: go build -v ./...

    - name: Test
      working-directory: ${{ env.UPDATER_DIR }}
      run: go test -v ./...

  test-api:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: password
          POSTGRES_DB: unittest
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        cache-dependency-path: |
            src/go.sum

    - name: Build
      run: |
        cd ${{ env.API_DIR }}
        go build -v ./...

    - name: Test
      run: |
        cd ${{ env.API_DIR }}
        go test -v ./...
